name: Copy File and Send Email Notification

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy File to Remote Machine
        env:
          REMOTE_USER: ubuntu              
          REMOTE_HOST: 54.242.219.144          
          LOCAL_FILE_PATH: file.txt
          REMOTE_DEST_PATH: /home/ubuntu/ 
        run: |
          scp -o StrictHostKeyChecking=no \
            $LOCAL_FILE_PATH $REMOTE_USER@$REMOTE_HOST:$REMOTE_DEST_PATH
            
      - name: Verify File 
        env:
          REMOTE_USER: ubuntu              
          REMOTE_HOST: 54.242.219.144
          REMOTE_FILE_PATH: /home/ubuntu/file.txt
        
        run: |
          ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST \
          "[ -f $REMOTE_FILE_PATH ] && echo 'File exists: $REMOTE_FILE_PATH' || echo 'File does not exist: $REMOTE_FILE_PATH'" > status.txt

          # Send email based on status
          if grep -q 'File exists' status.txt; then
            echo "File exists. Sending notification."
            echo "Subject: File Upload Status" > message.txt
            echo "The file has been successfully uploaded to $REMOTE_FILE_PATH." >> message.txt
          else
            echo "File does not exist. Sending notification."
            echo "Subject: File Upload Failed" > message.txt
            echo "The file upload failed. Please check the workflow logs." >> message.txt
          fi
          FILE_CONTENT=$(cat message.txt)
          echo "File content:"
          echo "$FILE_CONTENT"
          echo "::set-output name=file_content::$FILE_CONTENT"
                 
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.EMAIL_SERVER }}
          server_port: ${{ secrets.EMAIL_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: File Upload Status
          body: ${{ steps.read_file.outputs.file_content }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
